(()=>{"use strict";console.log("Veo 3 Prompt Assistant content script loaded");let e=[],t=null;function n(){const e=['textarea[placeholder*="prompt"]','textarea[placeholder*="Prompt"]','textarea[placeholder*="Describe"]','textarea[id*="prompt"]','textarea[id*="PINHOLE_TEXT_AREA_ELEMENT_ID"]','textarea[class*="prompt"]','textarea[data-testid*="prompt"]'];for(const t of e){const e=document.querySelector(t);if(e)return console.log(`Found textarea with selector: ${t}`),e}const t=document.querySelectorAll("textarea");for(const e of t){const t=e;if(t.placeholder&&t.placeholder.toLowerCase().includes("prompt")||t.id&&t.id.toLowerCase().includes("prompt")||t.className&&t.className.toLowerCase().includes("prompt"))return console.log("Found textarea via fallback search"),t}return null}function o(){const o=n();if(!o)return void console.log("No textarea found for button injection");e.forEach(e=>{e._updateHandler&&(window.removeEventListener("scroll",e._updateHandler),window.removeEventListener("resize",e._updateHandler)),e.parentNode&&e.parentNode.removeChild(e)}),e=[];let a=o.parentElement;for(;a&&a!==document.body;){const e=getComputedStyle(a);if("relative"===e.position||"absolute"===e.position)break;a=a.parentElement}if(!a||a===document.body){const e=document.createElement("div");e.style.cssText="position: relative; display: inline-block; width: 100%;",o.parentNode?.insertBefore(e,o),e.appendChild(o),a=e}const d=r("I","#00ffff",()=>{!function(e,t){const n=e.value.trim();if(!n)return void i("Please enter a prompt first","error");const o=t.textContent,r=t.style.background;t.textContent="⏳",t.style.background="#666666",t.style.pointerEvents="none",t.style.opacity="0.7",i("Improving prompt...","info"),chrome.runtime.sendMessage({type:"IMPROVE_PROMPT",prompt:n},n=>{t.textContent=o,t.style.background=r,t.style.pointerEvents="auto",t.style.opacity="1",n&&n.success?(e.value=n.improvedPrompt,e.dispatchEvent(new Event("input",{bubbles:!0})),i("Prompt improved!","success")):i(n?.error||"Failed to improve prompt","error")})}(o,d)},"Improve Prompt"),c=r("C","#ff00ff",()=>{!function(e){const n=e.value.trim();n?function(e,n){s();const o=document.createElement("div");o.style.cssText="\n    position: fixed;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    background: rgba(0, 0, 0, 0.7);\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    z-index: 10000;\n  ";const r=document.createElement("div");r.style.cssText="\n    background: #1a1a1a;\n    color: #ffffff;\n    border-radius: 12px;\n    padding: 24px;\n    max-width: 500px;\n    width: 90%;\n    box-shadow: 0 20px 40px rgba(0, 0, 0, 0.3);\n  ",r.innerHTML='\n    <h3 style="margin: 0 0 16px 0; font-size: 18px; color: #ffffff;">Change Prompt</h3>\n    <p style="margin: 0 0 16px 0; color: #cccccc; font-size: 14px;">\n      Describe how you\'d like to modify your prompt:\n    </p>\n    <textarea \n      id="change-instructions" \n      placeholder="e.g., \'Make it more cinematic\', \'Add a dog\', \'Change to nighttime setting\'"\n      style="\n        width: 100%;\n        height: 80px;\n        background: #2a2a2a;\n        border: 1px solid #444;\n        border-radius: 6px;\n        color: #ffffff;\n        padding: 12px;\n        font-size: 14px;\n        resize: vertical;\n        box-sizing: border-box;\n      "\n    ></textarea>\n    <div style="display: flex; gap: 12px; justify-content: flex-end; margin-top: 16px;">\n      <button id="cancel-change" style="\n        background: #444;\n        color: #ffffff;\n        border: none;\n        border-radius: 6px;\n        padding: 8px 16px;\n        cursor: pointer;\n        font-size: 14px;\n      ">Cancel</button>\n      <button id="apply-change" style="\n        background: linear-gradient(135deg, #ff6b35, #ff6b35dd);\n        color: white;\n        border: none;\n        border-radius: 6px;\n        padding: 8px 16px;\n        cursor: pointer;\n        font-size: 14px;\n      ">Apply Change</button>\n    </div>\n  ',o.appendChild(r),document.body.appendChild(o),t=o;const a=r.querySelector("#change-instructions");a.focus(),r.querySelector("#cancel-change")?.addEventListener("click",s),r.querySelector("#apply-change")?.addEventListener("click",()=>{const t=a.value.trim();t?(s(),i("Applying changes...","info"),chrome.runtime.sendMessage({type:"CHANGE_PROMPT",prompt:n,instructions:t},t=>{t&&t.success?(e.value=t.changedPrompt,e.dispatchEvent(new Event("input",{bubbles:!0})),i("Prompt changed!","success")):i(t?.error||"Failed to change prompt","error")})):i("Please provide change instructions","error")});const d=e=>{"Escape"===e.key&&(s(),document.removeEventListener("keydown",d))};document.addEventListener("keydown",d),o.addEventListener("click",e=>{e.target===o&&s()})}(e,n):i("Please enter a prompt first","error")}(o)},"Change Prompt"),p=document.createElement("div");p.style.cssText="\n    position: fixed;\n    display: flex;\n    flex-direction: column;\n    gap: 6px;\n    z-index: 10000;\n    pointer-events: none;\n  ";const l=()=>{const e=o.getBoundingClientRect();p.style.left=e.left-45+"px",p.style.top=e.bottom-80+"px"};p.appendChild(d),p.appendChild(c),document.body.appendChild(p),l();const u=()=>l();window.addEventListener("scroll",u,{passive:!0}),window.addEventListener("resize",u,{passive:!0}),p._updateHandler=u,e.push(p),console.log("Buttons injected successfully"),console.log("Button container:",a),console.log("Textarea:",o),console.log("Button group position:",p.getBoundingClientRect())}function r(e,t,n,o){const r=document.createElement("button");r.textContent=e,r.style.cssText=`\n    background: #1a1a1a;\n    color: white;\n    border: 2px solid ${t};\n    border-radius: 50%;\n    width: 32px;\n    height: 32px;\n    font-size: 16px;\n    font-weight: 600;\n    cursor: pointer;\n    transition: all 0.2s ease;\n    box-shadow: 0 0 8px ${t}40;\n    pointer-events: auto;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    position: relative;\n  `;let s=null;if(o){const e=()=>{s=document.createElement("div"),s.textContent=o,s.style.cssText="\n        position: fixed;\n        background: #333;\n        color: white;\n        padding: 6px 10px;\n        border-radius: 4px;\n        font-size: 12px;\n        white-space: nowrap;\n        z-index: 10001;\n        pointer-events: none;\n        opacity: 0;\n        transition: opacity 0.2s ease;\n      ",document.body.appendChild(s)},t=t=>{if(s||e(),s){const e=r.getBoundingClientRect();s.style.left=`${e.right+8}px`,s.style.top=e.top+e.height/2-s.offsetHeight/2+"px",s.style.opacity="1"}},n=()=>{s&&(s.style.opacity="0")};r.addEventListener("mouseenter",t),r.addEventListener("mouseleave",n)}return r.addEventListener("mouseenter",()=>{r.style.transform="translateY(-1px)",r.style.boxShadow=`0 0 12px ${t}80`}),r.addEventListener("mouseleave",()=>{r.style.transform="translateY(0)",r.style.boxShadow=`0 0 8px ${t}40`}),r.addEventListener("click",e=>{e.preventDefault(),e.stopPropagation(),n()}),r}function s(){t&&t.parentNode&&(t.parentNode.removeChild(t),t=null)}function i(e,t){const n=document.createElement("div");if(n.style.cssText=`\n    position: fixed;\n    top: 20px;\n    right: 20px;\n    padding: 12px 20px;\n    border-radius: 6px;\n    color: white;\n    font-size: 14px;\n    font-weight: 500;\n    z-index: 10001;\n    animation: slideIn 0.3s ease;\n    max-width: 300px;\n    ${"success"===t?"background: #16a34a;":""}\n    ${"error"===t?"background: #dc2626;":""}\n    ${"info"===t?"background: #2563eb;":""}\n  `,!document.querySelector("#veo-assistant-animations")){const e=document.createElement("style");e.id="veo-assistant-animations",e.textContent="\n      @keyframes slideIn {\n        from { transform: translateX(100%); opacity: 0; }\n        to { transform: translateX(0); opacity: 1; }\n      }\n    ",document.head.appendChild(e)}n.textContent=e,document.body.appendChild(n),setTimeout(()=>{n.parentNode&&(n.style.animation="slideIn 0.3s ease reverse",setTimeout(()=>{n.parentNode&&n.parentNode.removeChild(n)},300))},3e3)}chrome.runtime.onMessage.addListener((e,t,o)=>{if("INSERT_PROMPT"===e.type){const t=n();t?(t.value=e.prompt,t.dispatchEvent(new Event("input",{bubbles:!0})),o({success:!0})):o({success:!1,error:"Prompt input not found"})}return!0}),setTimeout(o,1e3),new MutationObserver(e=>{for(const t of e)if("childList"===t.type)for(const e of t.addedNodes)if(e.nodeType===Node.ELEMENT_NODE){const t=e;(t.matches&&t.matches("textarea")||t.querySelector&&t.querySelector("textarea"))&&setTimeout(o,500)}}).observe(document.body,{childList:!0,subtree:!0}),"loading"===document.readyState?document.addEventListener("DOMContentLoaded",()=>{setTimeout(o,1e3)}):setTimeout(o,1e3),setInterval(()=>{n()&&0===e.length&&o()},3e3)})();