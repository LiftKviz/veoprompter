(()=>{"use strict";var t,e,r={},a={};function i(t){var e=a[t];if(void 0!==e)return e.exports;var n=a[t]={exports:{}};return r[t].call(n.exports,n,n.exports,i),n.exports}i.m=r,i.n=t=>{var e=t&&t.__esModule?()=>t.default:()=>t;return i.d(e,{a:e}),e},i.d=(t,e)=>{for(var r in e)i.o(e,r)&&!i.o(t,r)&&Object.defineProperty(t,r,{enumerable:!0,get:e[r]})},i.f={},i.e=t=>Promise.all(Object.keys(i.f).reduce((e,r)=>(i.f[r](t,e),e),[])),i.u=t=>"vendor.js",i.miniCssF=t=>{},i.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(t){if("object"==typeof window)return window}}(),i.o=(t,e)=>Object.prototype.hasOwnProperty.call(t,e),t={},e="veo-3-prompt-assistant:",i.l=(r,a,n,s)=>{if(t[r])t[r].push(a);else{var o,c;if(void 0!==n)for(var l=document.getElementsByTagName("script"),d=0;d<l.length;d++){var p=l[d];if(p.getAttribute("src")==r||p.getAttribute("data-webpack")==e+n){o=p;break}}o||(c=!0,(o=document.createElement("script")).charset="utf-8",o.timeout=120,i.nc&&o.setAttribute("nonce",i.nc),o.setAttribute("data-webpack",e+n),o.src=r),t[r]=[a];var u=(e,a)=>{o.onerror=o.onload=null,clearTimeout(m);var i=t[r];if(delete t[r],o.parentNode&&o.parentNode.removeChild(o),i&&i.forEach(t=>t(a)),e)return e(a)},m=setTimeout(u.bind(null,void 0,{type:"timeout",target:o}),12e4);o.onerror=u.bind(null,o.onerror),o.onload=u.bind(null,o.onload),c&&document.head.appendChild(o)}},i.j=471,(()=>{var t;i.g.importScripts&&(t=i.g.location+"");var e=i.g.document;if(!t&&e&&(e.currentScript&&"SCRIPT"===e.currentScript.tagName.toUpperCase()&&(t=e.currentScript.src),!t)){var r=e.getElementsByTagName("script");if(r.length)for(var a=r.length-1;a>-1&&(!t||!/^http(s?):/.test(t));)t=r[a--].src}if(!t)throw new Error("Automatic publicPath is not supported in this browser");t=t.replace(/^blob:/,"").replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),i.p=t})(),(()=>{var t={471:0};i.f.j=(e,r)=>{var a=i.o(t,e)?t[e]:void 0;if(0!==a)if(a)r.push(a[2]);else{var n=new Promise((r,i)=>a=t[e]=[r,i]);r.push(a[2]=n);var s=i.p+i.u(e),o=new Error;i.l(s,r=>{if(i.o(t,e)&&(0!==(a=t[e])&&(t[e]=void 0),a)){var n=r&&("load"===r.type?"missing":r.type),s=r&&r.target&&r.target.src;o.message="Loading chunk "+e+" failed.\n("+n+": "+s+")",o.name="ChunkLoadError",o.type=n,o.request=s,a[1](o)}},"chunk-"+e,e)}};var e=(e,r)=>{var a,n,[s,o,c]=r,l=0;if(s.some(e=>0!==t[e])){for(a in o)i.o(o,a)&&(i.m[a]=o[a]);c&&c(i)}for(e&&e(r);l<s.length;l++)n=s[l],i.o(t,n)&&t[n]&&t[n][0](),t[n]=0},r=self.webpackChunkveo_3_prompt_assistant=self.webpackChunkveo_3_prompt_assistant||[];r.forEach(e.bind(null,0)),r.push=e.bind(null,r.push.bind(r))})();const n=new class{constructor(){this.initialized=!1,this.EXTENSION_ID="veo-3-prompter",this.init()}async init(){try{const{default:t}=await i.e(121).then(i.bind(i,32));this.extpay=t(this.EXTENSION_ID),this.isBackgroundScript()&&this.extpay.startBackground(),this.initialized=!0,console.log("PaymentService initialized successfully")}catch(t){console.error("Failed to initialize PaymentService:",t)}}isBackgroundScript(){return"undefined"!=typeof chrome&&chrome.runtime&&chrome.runtime.getManifest&&!chrome.tabs}async ensureInitialized(){if(this.initialized||await this.init(),!this.extpay)throw new Error("PaymentService not properly initialized")}async getUser(){await this.ensureInitialized();try{const t=await this.extpay.getUser();return{paid:t.paid||!1,paidAt:t.paidAt?new Date(t.paidAt):void 0,installedAt:new Date(t.installedAt),trialStartedAt:t.trialStartedAt?new Date(t.trialStartedAt):void 0,email:t.email,subscriptionStatus:t.subscriptionStatus}}catch(t){return console.error("Error getting user payment status:",t),{paid:!1,installedAt:new Date}}}async isPremiumUser(){const t=await this.getUser();return t.paid&&"active"===t.subscriptionStatus}async openPaymentPage(){await this.ensureInitialized();try{this.extpay.openPaymentPage()}catch(t){throw console.error("Error opening payment page:",t),new Error("Unable to open payment page")}}async getPlans(){await this.ensureInitialized();try{return(await this.extpay.getPlans()).map(t=>({id:t.id,title:t.title,description:t.description,price:t.price,currency:t.currency,interval:t.interval}))}catch(t){return console.error("Error getting payment plans:",t),[]}}onPaid(t){this.extpay?this.extpay.onPaid.addListener(e=>{const r={paid:e.paid||!1,paidAt:e.paidAt?new Date(e.paidAt):void 0,installedAt:new Date(e.installedAt),trialStartedAt:e.trialStartedAt?new Date(e.trialStartedAt):void 0,email:e.email,subscriptionStatus:e.subscriptionStatus};t(r)}):console.warn("ExtPay not initialized, payment listener not added")}async canUseFeature(t){const e=await this.isPremiumUser();return{gpt_modification:e,unlimited_saves:e,advanced_search:!0,custom_categories:e}[t]||!1}async getUsageLimits(){return await this.isPremiumUser()?{gptModifications:-1,savedPrompts:-1}:{gptModifications:3,savedPrompts:10}}async trackUsage(t){if(await this.isPremiumUser())return!0;const e=`usage_${t}_${(new Date).toDateString()}`;try{const r=(await chrome.storage.local.get([e]))[e]||0,a=await this.getUsageLimits();let i;return i="gpt_modification"===t?a.gptModifications:a.savedPrompts,!(r>=i)&&(await chrome.storage.local.set({[e]:r+1}),!0)}catch(t){return console.error("Error tracking usage:",t),!1}}async getRemainingUsage(t){if(await this.isPremiumUser())return-1;const e=`usage_${t}_${(new Date).toDateString()}`;try{const r=(await chrome.storage.local.get([e]))[e]||0,a=await this.getUsageLimits();let i;return i="gpt_modification"===t?a.gptModifications:a.savedPrompts,Math.max(0,i-r)}catch(t){return console.error("Error getting remaining usage:",t),0}}},s="undefined"!=typeof ExtPay?ExtPay("veo-3-prompter"):null;chrome.runtime.onInstalled.addListener(()=>{chrome.storage.local.set({userLibrary:{savedPrompts:[],customTags:{},lastUpdated:(new Date).toISOString()}}),s&&(s.startBackground(),s.onPaid.addListener(t=>{console.log("User paid via ExtPay:",t),chrome.runtime.sendMessage({type:"PAYMENT_STATUS_CHANGED",user:t})})),n.onPaid(t=>{console.log("User paid:",t),chrome.runtime.sendMessage({type:"PAYMENT_STATUS_CHANGED",user:t})})}),chrome.runtime.onMessage.addListener((t,e,r)=>"GET_USER_LIBRARY"===t.type?(chrome.storage.local.get(["userLibrary"],t=>{r(t.userLibrary)}),!0):"UPDATE_USER_LIBRARY"===t.type&&(chrome.storage.local.set({userLibrary:t.data},()=>{r({success:!0})}),!0))})();